{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { login } from \"../thunks/user\";\nconst slice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null\n  },\n  reducers: {\n    LOGIN_REQUEST: (state, action) => {},\n    LOGIN_SUCCESS: (state, action) => {},\n    LOGIN_FAILED: (state, action) => {}\n  },\n  extraReducers: builder => {\n    // Add reducers for additional action types here, and handle loading state as needed\n    builder.addCase(login.fulfilled, (state, action) => {\n      // Add user to the state array\n      state.entities.push(action.payload);\n    });\n  }\n});\nexport const {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["C:/Users/Wen Jie/Folder/i-study/i-study-app/src/reducers/user.js"],"names":["createSlice","login","slice","name","initialState","user","reducers","LOGIN_REQUEST","state","action","LOGIN_SUCCESS","LOGIN_FAILED","extraReducers","builder","addCase","fulfilled","entities","push","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,IAAI,EAAE,MADkB;AAExBC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAFU;AAGxBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAAE,CAD5B;AAERC,IAAAA,aAAa,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB,CAAE,CAF5B;AAGRE,IAAAA,YAAY,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB,CAAE;AAH3B,GAHc;AAQxBG,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1B;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,KAAK,CAACc,SAAtB,EAAiC,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAClD;AACAD,MAAAA,KAAK,CAACQ,QAAN,CAAeC,IAAf,CAAoBR,MAAM,CAACS,OAA3B;AACD,KAHD;AAID;AAduB,CAAD,CAAzB;AAiBA,OAAO,MAAM;AAAEX,EAAAA,aAAF;AAAiBG,EAAAA,aAAjB;AAAgCC,EAAAA;AAAhC,IAAiDT,KAAK,CAACiB,OAA7D;AACP,eAAejB,KAAK,CAACkB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login } from \"../thunks/user\";\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: { user: null },\r\n  reducers: {\r\n    LOGIN_REQUEST: (state, action) => {},\r\n    LOGIN_SUCCESS: (state, action) => {},\r\n    LOGIN_FAILED: (state, action) => {},\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Add reducers for additional action types here, and handle loading state as needed\r\n    builder.addCase(login.fulfilled, (state, action) => {\r\n      // Add user to the state array\r\n      state.entities.push(action.payload);\r\n    });\r\n  },\r\n});\r\n\r\nexport const { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED } = slice.actions;\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}