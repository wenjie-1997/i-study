{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_SUCCESS } from \"../reducers/user\";\nimport * as userService from \"../services/userService\";\nexport const login = payload => async (dispatch, getState) => {\n  dispatch(LOGIN_REQUEST());\n\n  try {\n    const {\n      username,\n      password\n    } = payload;\n    const {\n      status,\n      data\n    } = await userService.login(username, password);\n\n    if (status === 200) {\n      localStorage.setItem(\"accessToken\", JSON.stringify(data.jwt));\n      dispatch(LOGIN_SUCCESS(data));\n    } else {\n      dispatch(LOGIN_FAILED());\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch(LOGIN_FAILED());\n  }\n};\nexport const logout = () => async (dispatch, getState) => {\n  dispatch(LOGOUT_SUCCESS());\n};","map":{"version":3,"sources":["C:/Users/Wen Jie/Folder/i-study/i-study-app/src/thunks/user.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_SUCCESS","userService","login","payload","dispatch","getState","username","password","status","data","localStorage","setItem","JSON","stringify","jwt","error","console","log","logout"],"mappings":"AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,cAJF,QAKO,kBALP;AAMA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B;AAEA,OAAO,MAAMC,KAAK,GAAIC,OAAD,IAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9DD,EAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAM;AAAES,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBJ,OAA/B;AACA,UAAM;AAAEK,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAmB,MAAMR,WAAW,CAACC,KAAZ,CAAkBI,QAAlB,EAA4BC,QAA5B,CAA/B;;AACA,QAAIC,MAAM,KAAK,GAAf,EAAoB;AAClBE,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeJ,IAAI,CAACK,GAApB,CAApC;AACAV,MAAAA,QAAQ,CAACN,aAAa,CAACW,IAAD,CAAd,CAAR;AACD,KAHD,MAGO;AACLL,MAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AACD;AACF,GATD,CASE,OAAOgB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,IAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AACD;AACF,CAfM;AAiBP,OAAO,MAAMmB,MAAM,GAAG,MAAM,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AACxDD,EAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACD,CAFM","sourcesContent":["import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT_SUCCESS,\r\n} from \"../reducers/user\";\r\nimport * as userService from \"../services/userService\";\r\n\r\nexport const login = (payload) => async (dispatch, getState) => {\r\n  dispatch(LOGIN_REQUEST());\r\n  try {\r\n    const { username, password } = payload;\r\n    const { status, data } = await userService.login(username, password);\r\n    if (status === 200) {\r\n      localStorage.setItem(\"accessToken\", JSON.stringify(data.jwt));\r\n      dispatch(LOGIN_SUCCESS(data));\r\n    } else {\r\n      dispatch(LOGIN_FAILED());\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(LOGIN_FAILED());\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch, getState) => {\r\n  dispatch(LOGOUT_SUCCESS());\r\n};\r\n"]},"metadata":{},"sourceType":"module"}