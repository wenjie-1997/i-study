{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_SUCCESS, GET_USER_PROFILE_REQUEST, GET_USER_PROFILE_FAILED, GET_USER_PROFILE_SUCCESS, GET_USER_LIST_SUCCESS, GET_USER_LIST_REQUEST, GET_USER_LIST_FAILED, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILED } from \"../reducers/user\";\nimport * as userService from \"../services/userService\";\nexport const login = payload => async (dispatch, getState) => {\n  dispatch(LOGIN_REQUEST());\n\n  try {\n    const {\n      username,\n      password\n    } = payload;\n    const {\n      status,\n      data\n    } = await userService.login(username, password);\n\n    if (status === 200) {\n      localStorage.setItem(\"accessToken\", data.jwt);\n      dispatch(LOGIN_SUCCESS(data));\n    } else {\n      dispatch(LOGIN_FAILED());\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch(LOGIN_FAILED());\n  }\n};\nexport const getUserProfile = () => async (dispatch, getState) => {\n  dispatch(GET_USER_PROFILE_REQUEST());\n\n  try {\n    const {\n      data,\n      status\n    } = await userService.getUserInfo();\n    console.log(data);\n\n    if (status === 200) {\n      dispatch(GET_USER_PROFILE_SUCCESS(data));\n    } else dispatch(GET_USER_PROFILE_FAILED());\n  } catch (error) {\n    dispatch(GET_USER_PROFILE_FAILED());\n  }\n};\nexport const getUserList = () => async (dispatch, getState) => {\n  dispatch(GET_USER_LIST_REQUEST());\n\n  try {\n    const {\n      data,\n      status\n    } = await userService.getUserList();\n\n    if (status === 200) {\n      dispatch(GET_USER_LIST_SUCCESS(data));\n    } else dispatch(GET_USER_LIST_FAILED());\n  } catch (error) {\n    dispatch(GET_USER_LIST_FAILED());\n  }\n};\nexport const register = payload => async (dispatch, getState) => {\n  dispatch(REGISTER_USER_REQUEST());\n\n  try {\n    console.log(payload); // const { data, status } = await userService.getUserList();\n    // if (status === 200) {\n    //   dispatch(REGISTER_USER_SUCCESS(data));\n    // } else\n\n    dispatch(REGISTER_USER_FAILED());\n  } catch (error) {\n    dispatch(REGISTER_USER_FAILED());\n  }\n};\nexport const logout = () => async (dispatch, getState) => {\n  localStorage.removeItem(\"accessToken\");\n  dispatch(LOGOUT_SUCCESS());\n};","map":{"version":3,"sources":["C:/Users/Wen Jie/Folder/i-study/i-study-app/src/thunks/user.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_SUCCESS","GET_USER_PROFILE_REQUEST","GET_USER_PROFILE_FAILED","GET_USER_PROFILE_SUCCESS","GET_USER_LIST_SUCCESS","GET_USER_LIST_REQUEST","GET_USER_LIST_FAILED","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","userService","login","payload","dispatch","getState","username","password","status","data","localStorage","setItem","jwt","error","console","log","getUserProfile","getUserInfo","getUserList","register","logout","removeItem"],"mappings":"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","sourcesContent":["import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT_SUCCESS,\r\n  GET_USER_PROFILE_REQUEST,\r\n  GET_USER_PROFILE_FAILED,\r\n  GET_USER_PROFILE_SUCCESS,\r\n  GET_USER_LIST_SUCCESS,\r\n  GET_USER_LIST_REQUEST,\r\n  GET_USER_LIST_FAILED,\r\n  REGISTER_USER_REQUEST,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAILED,\r\n} from \"../reducers/user\";\r\nimport * as userService from \"../services/userService\";\r\n\r\nexport const login = (payload) => async (dispatch, getState) => {\r\n  dispatch(LOGIN_REQUEST());\r\n  try {\r\n    const { username, password } = payload;\r\n    const { status, data } = await userService.login(username, password);\r\n    if (status === 200) {\r\n      localStorage.setItem(\"accessToken\", data.jwt);\r\n      dispatch(LOGIN_SUCCESS(data));\r\n    } else {\r\n      dispatch(LOGIN_FAILED());\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(LOGIN_FAILED());\r\n  }\r\n};\r\n\r\nexport const getUserProfile = () => async (dispatch, getState) => {\r\n  dispatch(GET_USER_PROFILE_REQUEST());\r\n  try {\r\n    const { data, status } = await userService.getUserInfo();\r\n    console.log(data);\r\n    if (status === 200) {\r\n      dispatch(GET_USER_PROFILE_SUCCESS(data));\r\n    } else dispatch(GET_USER_PROFILE_FAILED());\r\n  } catch (error) {\r\n    dispatch(GET_USER_PROFILE_FAILED());\r\n  }\r\n};\r\n\r\nexport const getUserList = () => async (dispatch, getState) => {\r\n  dispatch(GET_USER_LIST_REQUEST());\r\n  try {\r\n    const { data, status } = await userService.getUserList();\r\n\r\n    if (status === 200) {\r\n      dispatch(GET_USER_LIST_SUCCESS(data));\r\n    } else dispatch(GET_USER_LIST_FAILED());\r\n  } catch (error) {\r\n    dispatch(GET_USER_LIST_FAILED());\r\n  }\r\n};\r\n\r\nexport const register = (payload) => async (dispatch, getState) => {\r\n  dispatch(REGISTER_USER_REQUEST());\r\n  try {\r\n    console.log(payload);\r\n    // const { data, status } = await userService.getUserList();\r\n\r\n    // if (status === 200) {\r\n    //   dispatch(REGISTER_USER_SUCCESS(data));\r\n    // } else\r\n    dispatch(REGISTER_USER_FAILED());\r\n  } catch (error) {\r\n    dispatch(REGISTER_USER_FAILED());\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch, getState) => {\r\n  localStorage.removeItem(\"accessToken\");\r\n  dispatch(LOGOUT_SUCCESS());\r\n};\r\n"]},"metadata":{},"sourceType":"module"}