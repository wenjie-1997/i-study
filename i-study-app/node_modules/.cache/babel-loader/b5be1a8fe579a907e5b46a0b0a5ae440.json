{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/\",\n  timeout: 10000\n});\naxios.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\naxios.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/Wen Jie/Folder/i-study/i-study-app/src/services/httpService.js"],"names":["axios","instance","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,wBADmB;AAE5BC,EAAAA,OAAO,EAAE;AAFmB,CAAb,CAAjB;AAKAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAUC,MAAV,EAAkB;AAChB;AACA,SAAOA,MAAP;AACD,CAJH,EAKE,UAAUC,KAAV,EAAiB;AACf;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARH,E,CAWA;;AACAT,KAAK,CAACK,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CACE,UAAUK,QAAV,EAAoB;AAClB;AACA;AACA,SAAOA,QAAP;AACD,CALH,EAME,UAAUH,KAAV,EAAiB;AACf;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAVH;AAaA,eAAeR,QAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:3000/\",\r\n  timeout: 10000,\r\n});\r\n\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}