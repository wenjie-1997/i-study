{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wen Jie\\\\Folder\\\\i-study\\\\i-study-app\\\\src\\\\screens\\\\Login\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../thunks/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    console.log(user);\n  }, [user.user]);\n\n  const onSubmit = e => {\n    const {\n      username,\n      password\n    } = this.state;\n    e.preventDefault();\n    this.props.login({\n      username,\n      password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mx-auto my-5 p-3 center\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Enter username\",\n            onChange: e => setUsername(e.target.value),\n            value: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"bX6OXJmrW1QeoI0gF5QXPzJ8YoE=\", true);\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: data => dispatch(login(data))\n});\n\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Wen Jie/Folder/i-study/i-study-app/src/screens/Login/index.js"],"names":["React","useEffect","useState","Card","Form","Button","connect","login","Login","username","setUsername","password","setPassword","user","useSelector","state","console","log","onSubmit","e","preventDefault","props","target","value","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../thunks/user\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user.user]);\r\n\r\n  const onSubmit = (e) => {\r\n    const { username, password } = this.state;\r\n    e.preventDefault();\r\n    this.props.login({ username, password });\r\n  };\r\n  return (\r\n    <Card className=\"mx-auto my-5 p-3 center\">\r\n      <Card.Body>\r\n        <h1>Login</h1>\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              placeholder=\"Enter username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              value={username}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ user: state.user });\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (data) => dispatch(login(data)),\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}